{
  "hash": "7343a49080e16e8f6886c04f8f70fd44",
  "result": {
    "markdown": "---\ntitle: \"Splines are beautiful\"\ndate: \"2022-10-06\"\ndescription: \"From linear model to GAM\"\ncategories: [code, analysis]\nfig-cap-location: top\nformat:\n  html:\n    code-fold: true\n    code-tools:\n      source: false\n      toggle: true\n---\n\n\n\n\n# Data\n\nTriceps skinfold thickness dataset: The data are derived from an anthropometric study of 892 females under 50 years in three Gambian villages in West Africa.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MultiKink)\nlibrary(ggplot2)\nlibrary(psych)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'psych'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"triceps\")\nheadTail(triceps)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      age lntriceps triceps\n1   12.05      1.22     3.4\n2    9.91      1.39       4\n3   10.04      1.44     4.2\n4   11.49      1.44     4.2\n...   ...       ...     ...\n889  7.91      1.92     6.8\n890  7.99      1.44     4.2\n891 14.63       2.2       9\n892 30.14       2.1     8.2\n```\n:::\n\n```{.r .cell-code}\ntri.age.plot <- ggplot(triceps, aes(x=age, y=triceps)) +\n                 geom_point(alpha=0.55, color=\"black\") + \n                 theme_minimal() \ntri.age.plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n\n# Polynomial regression\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel.cubic <- lm(triceps~age + I(age^2) + I(age^3),\n                  data=triceps)\nsummary(model.cubic)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = triceps ~ age + I(age^2) + I(age^3), data = triceps)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-11.5832  -1.9284  -0.5415   1.3283  24.4440 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)\n(Intercept)  8.004e+00  3.831e-01  20.893  < 2e-16\nage         -3.157e-01  7.721e-02  -4.089 4.73e-05\nI(age^2)     3.101e-02  3.964e-03   7.824 1.45e-14\nI(age^3)    -4.566e-04  5.612e-05  -8.135 1.38e-15\n\nResidual standard error: 3.868 on 888 degrees of freedom\nMultiple R-squared:  0.3836,\tAdjusted R-squared:  0.3815 \nF-statistic: 184.2 on 3 and 888 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nmodel.cubic.poly <- lm(triceps~poly(age,3),\n                       data=triceps)\nsummary(model.cubic.poly)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = triceps ~ poly(age, 3), data = triceps)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-11.5832  -1.9284  -0.5415   1.3283  24.4440 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)\n(Intercept)     9.7024     0.1295  74.911  < 2e-16\npoly(age, 3)1  85.2594     3.8682  22.041  < 2e-16\npoly(age, 3)2  -3.1638     3.8682  -0.818    0.414\npoly(age, 3)3 -31.4683     3.8682  -8.135 1.38e-15\n\nResidual standard error: 3.868 on 888 degrees of freedom\nMultiple R-squared:  0.3836,\tAdjusted R-squared:  0.3815 \nF-statistic: 184.2 on 3 and 888 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\n## plot(predict(model.cubic.poly), predict(model.cubic)) # the same\ntri.age.plot + \n   stat_smooth(method = \"lm\", \n               formula = y~poly(x,3,raw=T), size = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/polynomial-1.png){width=672}\n:::\n:::\n\n\n\n\n# Cross-validation of different polynomials\n\n## RMSE for quadratic\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n```\n:::\n\n```{.r .cell-code}\nset.seed(1234)\n#repeated CV for the MSE\ntrC.lm <- trainControl(method = \"repeatedcv\", \n                       number = 10,         \n                       repeats = 10)        \npol.model <- train(triceps ~ poly(age,3),\n                       data = triceps, \n                       method = \"lm\",\n                       trControl = trC.lm)    \npol.model$results[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      RMSE\n1 3.865866\n```\n:::\n:::\n\n\n## RMSE for different degrees\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy.pol.f <- function(x){\n    xx<-poly(triceps$age, x, raw=T)    \n    new.data  <- cbind(triceps=triceps$triceps, xx)                                 \n    pol.model <- train(triceps~., data = new.data,method = \"lm\")    \n    RMSE.cv = pol.model$results[2]\n  }\n\nt(sapply(1:10, my.pol.f))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     RMSE     RMSE     RMSE     RMSE    RMSE     RMSE     RMSE     RMSE     RMSE     RMSE    \n[1,] 3.984711 4.083302 3.830449 3.77627 3.787051 3.740982 3.847184 3.803367 3.866925 3.803712\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntri.age.plot + \n   stat_smooth(method = \"lm\", \n               formula = y~poly(x,6,raw=T), size = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n# Piecewise linear regression\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred1 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age<5,]))\npred2 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age >=5 & triceps$age<10,]))\npred3 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age>=10 & triceps$age<20,]))\npred4 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age>=20 & triceps$age<30,]))\npred5 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age>=30 & triceps$age<40,]))\npred6 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age>=40,]))\ntri.age.plot + \n  geom_line(data=triceps[triceps$age<5,], \n            aes(y = pred1, x=age), size = 1, col=\"blue\") +\n  geom_line(data=triceps[triceps$age >=5 & triceps$age<10,], \n            aes(y = pred2, x=age), size = 1, col=\"blue\") +\n  geom_line(data=triceps[triceps$age>=10 & triceps$age<20,], \n            aes(y = pred3, x=age), size = 1, col=\"blue\") +\n  geom_line(data=triceps[triceps$age>=20 & triceps$age<30,], \n            aes(y = pred4, x=age), size = 1, col=\"blue\") +\n  geom_line(data=triceps[triceps$age>=30 & triceps$age<40,], \n            aes(y = pred5, x=age), size = 1, col=\"blue\") +\n  geom_line(data=triceps[triceps$age>=40,], \n            aes(y = pred6, x=age), size = 1, col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## Connecting the lines \n\n\nWe want continuity in the knots, this will be the model:\n\n$$Y_i=\\beta_0+\\beta_1x_i+\\beta_2I_{x_i\\geq 5}(x_i-5)+\\cdots+\\beta_6I_{x_i \\geq 40}(x_i-40) + \\epsilon_i$$\n\n\n\nBy \"hand\" or with B-splines: `splines::bs()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred7 <- predict(lm(triceps~ age + I((age-5)*(age>=5)) +\n                                   I((age-10)*(age >= 10)) +\n                                   I((age-20)*(age >= 20)) +\n                                   I((age-30)*(age >= 30)) +\n                                  I((age-40)*(age >= 40)),\n                    data = triceps))\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred7, x=age), size = 1, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/connect lines-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(splines)\npred.lm.bs <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=1), data=triceps))\n\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.lm.bs, x=age), size = 1, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n## Piecewise quadratic polynomial\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred.quad <- predict(lm(triceps~ age + I(age^2) + \n                    I((age-5)*(age>=5)) + I((age-5)^2*(age>=5)) +\n                    I((age-10)*(age >= 10)) + I((age-10)^2*(age>=10)) +\n                    I((age-20)*(age >= 20)) + I((age-20)^2*(age>=20)) +\n                    I((age-30)*(age >= 30)) + I((age-30)^2*(age>=30)) +\n                    I((age-40)*(age >= 40)) + I((age-40)^2*(age>=40)),\n                    data = triceps))\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.quad, x=age), size = 1, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nNot smooth yet, let us use only quadratic terms\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred.quadsmooth <- predict(lm(triceps~ age + I(age^2) + \n                    I((age-5)^2*(age>=5)) +\n                    I((age-10)^2*(age>=10)) +\n                    I((age-20)^2*(age>=20)) +\n                    I((age-30)^2*(age>=30)) +\n                    I((age-40)^2*(age>=40)),\n                    data = triceps))\n```\n:::\n\n\nThis is again much simpler with `bs()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred.quadsmooth2 <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=2), data=triceps))                        \ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.quadsmooth2, x=age), size = 1, col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n# Splines\n\n## B-splines\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncub.splines.bs <- lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree = 3), data=triceps)\nsummary(cub.splines.bs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = triceps ~ bs(age, knots = c(5, 10, 20, 30, 40), \n    degree = 3), data = triceps)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-11.5234  -1.6912  -0.2917   1.1356  23.0922 \n\nCoefficients:\n                                                   Estimate Std. Error t value Pr(>|t|)\n(Intercept)                                          6.9598     0.9729   7.154 1.77e-12\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)1   2.5367     1.7154   1.479   0.1396\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)2  -0.3032     0.9629  -0.315   0.7529\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)3  -1.9092     1.2993  -1.469   0.1421\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)4   7.4056     1.2179   6.081 1.78e-09\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)5   6.1050     1.4043   4.347 1.54e-05\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)6  10.1770     1.5427   6.597 7.23e-11\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)7   3.9428     1.9082   2.066   0.0391\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)8  10.1473     1.7545   5.784 1.01e-08\n\nResidual standard error: 3.743 on 883 degrees of freedom\nMultiple R-squared:  0.4261,\tAdjusted R-squared:  0.4209 \nF-statistic: 81.94 on 8 and 883 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n## Natural splines, restriction that the fitted curve linear at the extremes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncub.splines.ns <- lm(triceps ~ ns(age, knots = c(5,10,20,30,40)), data=triceps)\nsummary(cub.splines.ns)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = triceps ~ ns(age, knots = c(5, 10, 20, 30, 40)), \n    data = triceps)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10.4875  -1.6873  -0.3665   1.1146  22.8643 \n\nCoefficients:\n                                       Estimate Std. Error t value Pr(>|t|)\n(Intercept)                              8.3811     0.5219  16.059  < 2e-16\nns(age, knots = c(5, 10, 20, 30, 40))1  -3.5592     0.6712  -5.303 1.44e-07\nns(age, knots = c(5, 10, 20, 30, 40))2   5.7803     1.0379   5.569 3.39e-08\nns(age, knots = c(5, 10, 20, 30, 40))3   5.5118     0.9416   5.853 6.78e-09\nns(age, knots = c(5, 10, 20, 30, 40))4   6.9070     0.9050   7.632 5.99e-14\nns(age, knots = c(5, 10, 20, 30, 40))5   5.4136     1.3783   3.928 9.24e-05\nns(age, knots = c(5, 10, 20, 30, 40))6   6.6460     1.0829   6.137 1.27e-09\n\nResidual standard error: 3.759 on 885 degrees of freedom\nMultiple R-squared:  0.4199,\tAdjusted R-squared:  0.416 \nF-statistic: 106.8 on 6 and 885 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntri.age.plot <- ggplot(triceps, aes(x=age, y=triceps)) +\n                 geom_point(alpha=0.55, color=\"black\") + \n                 theme_minimal() \ntri.age.plot +\n    stat_smooth(method = \"lm\", \n               formula = y~bs(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"green\") + \n    stat_smooth(method = \"lm\", \n               formula = y~ns(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"red\")\n```\n\n::: {.cell-output-display}\n![polynomial cubic splines, natural cubic splines](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n# Smoothing splines\n\nAvoids the knot selection problem completely by using a maximal set of\nknots. The complexity of the fit is controlled by regularization.\nProblem: among all functions $f(x)$ with two continuous derivatives,\nfind one that minimizes the penalized residual sum of squares\n\n$$ RSS(f,\\lambda)=\\sum_{i=1}^N(y_i-f(x_i))^2+\\lambda[f''(t)]^2dt$$\n\nwhere $\\lambda$ is a fixed smoothing parameter. The first term measures closeness to the data, while the second term\npenalizes curvature in the function, and $\\lambda$ establishes a tradeoff\nbetween the two. Special cases: $\\lambda=0$ (no constraint on $f$) and\n$\\lambda=\\infty$ ($f$ has to be linear). It can be shown that this\nproblem has an explicit, finite-dimensional, unique minimizer which is\na natural cubic spline with knots at the unique values of the $x_i,i= 1, . . . , N.$\n\nAt face value it seems that the family is still over-parametrized, since\nthere are as many as $N$ knots, which implies $N$ degrees of freedom.\nHowever, the penalty term translates to a penalty on the spline\ncoefficients, which are shrunk some of the way toward the linear fit.\n\nThe solution is of the form\n\n$$f(x)=\\sum_{j=1}^N\\theta_iN_j(x),$$\\\n\nwhere the $N_j(x)$ are an $N$-dimensional set of basis functions for\nrepresenting this family of natural splines.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsspline <- smooth.spline(x=triceps$age, y=triceps$triceps, cv=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in smooth.spline(x = triceps$age, y = triceps$triceps, cv = TRUE): cross-validation with non-unique 'x' values\nseems doubtful\n```\n:::\n\n```{.r .cell-code}\nplot(triceps$age, triceps$triceps)\nlines(sspline, col=\"blue\")\nlines(triceps$age,predict(cub.splines.ns),type=\"p\",col=\"red\")   # compare with cubic spline\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/smoothing splines-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n# Generalized additive model \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mgcv)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: nlme\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is mgcv 1.8-35. For overview type 'help(\"mgcv-package\")'.\n```\n:::\n\n```{.r .cell-code}\ngamtri<-gam(triceps~s(age,bs=\"cr\"),data=triceps)\nsummary(gamtri)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\ntriceps ~ s(age, bs = \"cr\")\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept)   9.7024     0.1255   77.29   <2e-16\n\nApproximate significance of smooth terms:\n         edf Ref.df    F p-value\ns(age) 6.706  7.539 85.6  <2e-16\n\nR-sq.(adj) =  0.419   Deviance explained = 42.3%\nGCV =  14.18  Scale est. = 14.057    n = 892\n```\n:::\n\n```{.r .cell-code}\nplot(gamtri)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/GAM-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}