{
  "hash": "8c81d5a82de8e196e08c417e9494a0e7",
  "result": {
    "markdown": "---\ntitle: \"Exponential Growth\"\ndate: \"2022-09-29\"\ndescription: \"exp and log\"\ncategories: [news, code, analysis]\n---\n\n\n\n\n*The greatest shortcoming of the human race is the inability to\n  understand the exponential function. (Al Bartlett)*\n\n# Problem\t\nSie sitzen zuoberst in einem Fussball-Stadion; es hat Platz für\n$6\\times 10^{13}$ Wassertropfen. Es beginnt mit einem Tropfen, der in\nder ersten Minute ins Stadion tröpfelt. Jede Minute *verdoppelt* sich\ndie Anzahl Tropfen. Lange passiert nichts Besonderes. Sie sehen die\nGefahr nicht kommen. Von der *Hälfte* bis *ganz*\noben geht es plötzlich sehr schnell. Es würde auch nicht viel\nbringen, wenn das Stadion noch viel grösser wäre; wir haben\n**exponentielles Wachstum**.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax <- 3e06*20e06 ##Volumen Allianz-Arena\nhalb <- max/2\nmax2<-max*2\ntmax<-50\nt<-seq(0,tmax,by=0.1)\nexpwachs <- function(t) {y<-1*2^(t/1)}\nplot(t,expwachs(t),type=\"l\",ylim=c(0,max2),main=\"\",ylab=\"Volumen [Wassertropfen]\", xlab=\"Minuten\")\naxis(side = 1, at = seq(0,tmax,by=1))\nabline(h=max,lty=2,col=\"red\")\nabline(v=t[458],lty=2,col=\"red\")\nabline(h=halb,lty=2,col=\"blue\")\nabline(v=t[448],lty=2,col=\"blue\")\n```\n\n::: {.cell-output-display}\n![Exponentielles Wachstum](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\n# Exponentialfunktion\n\n**Jede Exponentialfunktion $a^x$ mit $a>1$ wächst ab einem gewissen\n$x$ schneller als jede lineare Funktion $a+bx$**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve(10*x,from=0,to=60,ylab=\"y\")\ncurve(20*x,add=TRUE,lty=2)\ncurve(2^x,add=TRUE,lty=3)\ncurve(1.2^x,add=TRUE,lty=4)\n```\n\n::: {.cell-output-display}\n![Exponentialfunktion und lineare Funktion](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# Exponentielles Wachstum\n\n\n**Exponential growth** is defined by\n\n$$\\boxed{x(t)=x_0e^{kt}=x_0e^{t/\\tau}=x_02^{t/T}},$$\n\nwith $t$: time, $\\tau$: $e$-folding time, $T$: doubling time, $k$: growth constant. ^[Proof: $$x(t)=x_0e^{kt}=x_0e^{t/\\tau}=x_0 2^{\\frac{t}{\\tau}\\log_2e}=x_02^{\\frac{t}{\\tau} \\frac{1}{\\log 2 }}=x_02^{t/T}$$]\n  \n\n+ Bei Verdoppelung alle 2 Tage: $2^{t/2}=(2^{1/2})^t=1.41^t$\n\n+ Bei Verdoppelung alle 3 Tage: $2^{t/3}=(2^{1/3})^t=1.26^t$\n\n+ Bei Verdoppelung alle 7 Tage: $2^{t/7}=(2^{1/7})^t=1.1^t$\n\n+ Bei Verdoppelung alle 10 Tage: $2^{t/10}=(2^{1/10})^t=1.07^t$\n\n\n<!-- # Daten Covid-19 -->\n\n<!-- <https://github.com/openZH/covid_19> -->\n\n<!-- ```{r echo=FALSE} -->\n<!-- data<-read.csv(\"https://raw.githubusercontent.com/openZH/covid_19/master/COVID19_Fallzahlen_CH_total.csv\") -->\n<!-- str(data) -->\n<!-- names(data)[3]<-\"Kanton\" -->\n<!-- data<-data[,-11] -->\n<!-- sKcases<-split(data$ncumul_conf,data$Kanton) -->\n<!-- sKfatal<-split(data$ncumul_deceased,data$Kanton) -->\n<!-- sKhosp<-split(data$ncumul_hosp,data$Kanton) -->\n<!-- sKICU<-split(data$ncumul_ICU,data$Kanton) -->\n<!-- sKvent<-split(data$ncumul_vent,data$Kanton) -->\n<!-- ``` -->\n\n<!-- ## Reported cases -->\n<!-- ```{r} -->\n<!-- CasesKanton<-sapply(sKcases,function(x){x[max(which(!is.na(x)))]}) -->\n<!-- CasesKanton -->\n<!-- sum(CasesKanton) -->\n<!-- ``` -->\n\n<!-- ## Deceased -->\n<!-- ```{r} -->\n<!-- FatKanton<-sapply(sKfatal,function(x){x[max(which(!is.na(x)))]}) -->\n<!-- FatKanton -->\n<!-- sum(FatKanton,na.rm=TRUE) -->\n<!-- ``` -->\n\n\n\n\n# Covid-19\n\n## Inzidenz und kumulierte Inzidenz\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata<-read.csv(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\",check.names=FALSE)\nsw<-data[data$\"Country/Region\"==\"Switzerland\",-c(1,2,3,4)]\ncases<-as.numeric(sw[-c(1:42)])\nincid<-diff(cases)\nt<-1:length(incid)\nma <- function(x, n = 7){stats::filter(x, rep(1 / n, n), sides = 2)}  ##moving average over 7 days\nincidAv<-ma(incid)\nplot(t,incid,type=\"l\",col=\"blue\",lty=2,xlab=\"Tage\")\nlines(t,incidAv,col=\"red\",lwd=2)\n```\n\n::: {.cell-output-display}\n![Inzidenz](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(1:length(cases),cases,type=\"l\",col=\"blue\",lwd=2,xlab=\"Tage\")\n```\n\n::: {.cell-output-display}\n![kumulierte Indzidenz](index_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(1:length(cases),log(cases),type=\"l\",col=\"blue\",lwd=2,xlab=\"Tage\")\n```\n\n::: {.cell-output-display}\n![log kumulierte Indzidenz](index_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n:::\n\n\n\n\n\n\n## Erste Welle Covid-19\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nswisspop<-8e6\ntime<-seq(1,60,by=1)\ntag<-1:length(cases)\nT1<-1\nT2<-2\nT3<-3\nT7<-7\nx0<-100\nY1<-x0*2^(time/T1)\nY2<-x0*2^(time/T2)\nY3<-x0*2^(time/T3)\nY7<-x0*2^(time/T7)\ntime<-time+1\nplot(time,Y1,type=\"l\",ylab=\"cases\",ylim=c(100,10000),xlab=\"days\",las=1)\nlines(time,Y3,col=\"red\",lty=2)\nlines(time,Y2,lty=2)\nlines(time,Y7,lty=3)\nabline(h=swisspop,lty=5,col=\"red\") \npoints(tag,cases,type=\"l\",col=\"red\")\n```\n\n::: {.cell-output-display}\n![Inzidenz](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(time,Y1,log=\"y\",type=\"l\",ylab=\"cases\",xlab=\"days\",axes=FALSE,ylim=c(100,40000))\nat.y <- outer(1:9, 10^(2:9))\nlab.y <- ifelse(log10(at.y) %% 1 == 0, at.y, NA)\naxis(2, at=at.y, labels=lab.y, las=2)\naxis(1,time)\nlines(time,Y2,lty=2)\nlines(time,Y7,lty=3)\nlines(time,Y3,col=\"red\",lty=2)\nabline(h=swisspop,col=\"red\",lty=3)\npoints(tag,cases,type=\"l\",col=\"red\")\n```\n\n::: {.cell-output-display}\n![log Inzidenz](index_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n\n **Erste Welle. Example of doubling times: 1 day (solid), 2\n      days (dashed), 3 days (red), seven days (dotted), with reported cases Covid19\n      in\n      Switzerland. Horizontal line: swiss population. On a logarithmic\n      scale, a straight line indicates exponential growth.\n[Quelle](https://www.arcgis.com/apps/opsdashboard/index.html\\#/bda7594740fd40299423467b48e9ecf6)**.\n\n\n\n## Auswirkung Vorfaktor\n\n\nAnnahme: Verdoppelung alle drei Tage, 10 Prozent der Infizierten müssen ins Spital. Die Anzahl Cases von heute sind die\nAnzahl Spitalpatienten in 9 Tagen, **wenn mann nichts macht**.\n\n$0.1\\times 2^{0.33t}=0.1\\times (2^{0.33})^t=0.1\\times\n1.3^t=1.3^{\\log_{1.3}0.1}1.3^t=1.3^{t+\\log_{1.3}0.1}=1.3^{t-8.776}$\n\n\nAnalog kann man zeigen: Wenn die Mortalitätsrate bei einem Prozent der\nbestätigten Fälle liegt, dann ist die Anzahl der bestätigten Fälle\ndie zu erwartende Anzahl der Todesfälle ca. 18 Tage später, **wenn man\nnichts macht**. \n\n$0.01\\times 2^{0.33t}=0.01\\times (2^{0.33})^t=0.01\\times\n1.3^t=1.3^{\\log_{1.3}0.01}1.3^t=1.3^{t+\\log_{1.3}0.01}=1.3^{t-17.553}$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndelay<-log(0.1)/log(1.3)\ndelay\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -8.776291\n```\n:::\n\n```{.r .cell-code}\ndelay2<-log(0.01)/log(1.3)\ndelay2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -17.55258\n```\n:::\n\n```{.r .cell-code}\nplot(time,2^(0.33*time),ylab=\"cases\",xlab=\"days\",type=\"l\",ylim=c(0,10000),col=3)\nlines(time,0.1*2^(time/3),lty=1,col=1)\nlines(time,0.01*2^(time/3),lty=1,col=2,lwd=2)\n```\n\n::: {.cell-output-display}\n![Auswirkung Vorfaktor](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}