{
  "hash": "7ec4455d822ad1885d7df77e4e768e61",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Design Matrix for interaction effects\"\ndate: \"2025-02-06\"\ndescription: \"Matrix Algebra\"\ncategories: [code, analysis]\n---\n\n\n\n\n\n\n\n\n## Design Matrix for interaction effects\n\nProblem discussed with Niklaus Meier (Thank you.)\n\nAssume we want interaction terms  of continuous variables (variables in $\\mathbf{X}$) with categorical variables (variables in $\\mathbf{J}$). The corresponding Design Matrix is the **Transposed Khatri-Rao Product**; this is a **row-by-row Kronecker product** of two matrices.\n\n\n\n$$\n\\mathbf{J} \\bullet \\mathbf{X}\n=\n\\begin{bmatrix}\n\\mathbf{J}[1,] \\otimes \\mathbf{X}[1,]\\\\\\hline \n\\mathbf{J}[2,] \\otimes \\mathbf{X}[2,]\\\\\\hline\n\\mathbf{J}[3,] \\otimes \\mathbf{X}[3,]\\\\\\hline\n...\\\\\\hline\n\\mathbf{J}[n,] \\otimes \\mathbf{X}[n,]\\\\\n\\end{bmatrix}\n$$\n\n\n<!-- ```{r include=FALSE} -->\n<!-- library(knitr) -->\n<!-- opts_chunk$set(echo=FALSE,fig.path=\"figures/\",fig.align=\"center\", -->\n<!--                background=\"transparent\",size=\"scriptsize\",out.width=\"75%\",warning=FALSE,message=FALSE,tidy=TRUE) -->\n               \n<!-- ``` -->\n\n# Dummy Matrix $J$ and Matrix $X$, Parameter vector\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Matrix)\nlibrary(psych)\nn<-20\np1<-2\np2<-4\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nk<-p1*p2\nJ<-matrix(sample(c(0,1),n*p1,replace=TRUE),n,p1)\nX<-matrix(round(rnorm(n*p2,10,2)),n,p2)\nbeta<-t(t(rnorm(k)))\nJ\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      [,1] [,2]\n [1,]    1    1\n [2,]    0    1\n [3,]    1    1\n [4,]    0    0\n [5,]    1    0\n [6,]    1    0\n [7,]    0    1\n [8,]    1    0\n [9,]    0    0\n[10,]    0    0\n[11,]    1    0\n[12,]    1    1\n[13,]    0    0\n[14,]    0    1\n[15,]    0    0\n[16,]    1    0\n[17,]    0    0\n[18,]    1    0\n[19,]    0    0\n[20,]    1    0\n```\n\n\n:::\n\n```{.r .cell-code}\nX\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      [,1] [,2] [,3] [,4]\n [1,]    9   10   10   10\n [2,]   10   10   10   10\n [3,]   10   12    9   10\n [4,]   12    7   10   11\n [5,]    9    9    9   10\n [6,]   10    9   10    8\n [7,]   10   11    9   10\n [8,]    9   10   12   11\n [9,]    6    6   10   12\n[10,]    8    6   10   12\n[11,]   11   11    7    8\n[12,]    9   11   11   10\n[13,]    9   11   14   10\n[14,]    9   12   11    9\n[15,]    9    6    7   11\n[16,]   12    9   11    6\n[17,]    9   10    9   10\n[18,]    7   10   10    7\n[19,]    9   10   11   12\n[20,]    8    7   12   11\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbeta\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         [,1]\n[1,] -0.93243\n[2,] -0.41894\n[3,]  0.64467\n[4,] -0.09197\n[5,] -0.87348\n[6,] -0.50155\n[7,] -0.46773\n[8,] -0.65440\n```\n\n\n:::\n:::\n\n\n\n\n\n# Design Matrix: Transposed Khatri-Rao product \n\nThis is a **row-by-row Kronecker product of two matrices**\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDesign<-t(KhatriRao(t(J),t(X)))##Design matrix\n```\n:::\n\n\n\n\n# Alternative (\"by hand\")\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nKR<-matrix(0,rep(n*p1*p2),nrow=n,ncol=p1*p2)\nfor (i in 1:n) {KR[i,]<-kronecker(J[i,],X[i,])} ##Explicit: row-by-row Kronecker product of two matrices\nheadTail(KR)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     X1  X2  X3  X4  X5  X6  X7  X8\n1     9  10  10  10   9  10  10  10\n2     0   0   0   0  10  10  10  10\n3    10  12   9  10  10  12   9  10\n4     0   0   0   0   0   0   0   0\n... ... ... ... ... ... ... ... ...\n17    0   0   0   0   0   0   0   0\n18    7  10  10   7   0   0   0   0\n19    0   0   0   0   0   0   0   0\n20    8   7  12  11   0   0   0   0\n```\n\n\n:::\n:::\n\n\n\n\n# Model Matrix (macht dasselbe)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheadTail(model.matrix(~X:J-1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    X1.J1 X2.J1 X3.J1 X4.J1 X1.J2 X2.J2 X3.J2 X4.J2\n1       9    10    10    10     9    10    10    10\n2       0     0     0     0    10    10    10    10\n3      10    12     9    10    10    12     9    10\n4       0     0     0     0     0     0     0     0\n...   ...   ...   ...   ...   ...   ...   ...   ...\n17      0     0     0     0     0     0     0     0\n18      7    10    10     7     0     0     0     0\n19      0     0     0     0     0     0     0     0\n20      8     7    12    11     0     0     0     0\n```\n\n\n:::\n:::\n\n\n\n\n\n# Linear Prediction\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neta<-Design%*%beta\nY<-rnorm(n,mean=as.vector(eta),sd=.001)\n```\n:::\n\n\n\n\n# Analyse\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat<-data.frame(Y=Y,X=as.data.frame(KR))\ndata.frame(estimated=coef(m<-lm(Y~.-1,dat)),true=beta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     estimated     true\nX.V1  -0.93255 -0.93243\nX.V2  -0.41901 -0.41894\nX.V3   0.64473  0.64467\nX.V4  -0.09181 -0.09197\nX.V5  -0.87324 -0.87348\nX.V6  -0.50195 -0.50155\nX.V7  -0.46749 -0.46773\nX.V8  -0.65443 -0.65440\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}