[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nGendern\n\n\n\n\n\nAber der Kaiser hat ja gar nichts an!\n\n\n\n\n\n\nOct 24, 2022\n\n\n\n\n\n\n\n\nBeyond linearity\n\n\n\n\n\nFrom linear model to GAM\n\n\n\n\n\n\nOct 6, 2022\n\n\n\n\n\n\n\n\nExponential Growth\n\n\n\n\n\nexp and log\n\n\n\n\n\n\nSep 29, 2022\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\n\n\n\nSep 26, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Welcome!"
  },
  {
    "objectID": "posts/exponentialGrowth/index.html",
    "href": "posts/exponentialGrowth/index.html",
    "title": "Exponential Growth",
    "section": "",
    "text": "The greatest shortcoming of the human race is the inability to understand the exponential function. (Al Bartlett)"
  },
  {
    "objectID": "posts/exponentialGrowth/index.html#inzidenz-und-kumulierte-inzidenz",
    "href": "posts/exponentialGrowth/index.html#inzidenz-und-kumulierte-inzidenz",
    "title": "Exponential Growth",
    "section": "Inzidenz und kumulierte Inzidenz",
    "text": "Inzidenz und kumulierte Inzidenz\n\nCodedata<-read.csv(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\",check.names=FALSE)\nsw<-data[data$\"Country/Region\"==\"Switzerland\",-c(1,2,3,4)]\ncases<-as.numeric(sw[-c(1:42)])\nincid<-diff(cases)\nt<-1:length(incid)\nma <- function(x, n = 7){stats::filter(x, rep(1 / n, n), sides = 2)}  ##moving average over 7 days\nincidAv<-ma(incid)\nplot(t,incid,type=\"l\",col=\"blue\",lty=2,xlab=\"Tage\")\nlines(t,incidAv,col=\"red\",lwd=2)\n\n\nInzidenz\n\n\n\n\nCodeplot(1:length(cases),cases,type=\"l\",col=\"blue\",lwd=2,xlab=\"Tage\")\n\n\nkumulierte Indzidenz\n\n\n\n\nCodeplot(1:length(cases),log(cases),type=\"l\",col=\"blue\",lwd=2,xlab=\"Tage\")\n\n\nlog kumulierte Indzidenz"
  },
  {
    "objectID": "posts/exponentialGrowth/index.html#erste-welle-covid-19",
    "href": "posts/exponentialGrowth/index.html#erste-welle-covid-19",
    "title": "Exponential Growth",
    "section": "Erste Welle Covid-19",
    "text": "Erste Welle Covid-19\n\nCodeswisspop<-8e6\ntime<-seq(1,60,by=1)\ntag<-1:length(cases)\nT1<-1\nT2<-2\nT3<-3\nT7<-7\nx0<-100\nY1<-x0*2^(time/T1)\nY2<-x0*2^(time/T2)\nY3<-x0*2^(time/T3)\nY7<-x0*2^(time/T7)\ntime<-time+1\nplot(time,Y1,type=\"l\",ylab=\"cases\",ylim=c(100,10000),xlab=\"days\",las=1)\nlines(time,Y3,col=\"red\",lty=2)\nlines(time,Y2,lty=2)\nlines(time,Y7,lty=3)\nabline(h=swisspop,lty=5,col=\"red\") \npoints(tag,cases,type=\"l\",col=\"red\")\n\n\nInzidenz\n\n\n\n\nCodeplot(time,Y1,log=\"y\",type=\"l\",ylab=\"cases\",xlab=\"days\",axes=FALSE,ylim=c(100,40000))\nat.y <- outer(1:9, 10^(2:9))\nlab.y <- ifelse(log10(at.y) %% 1 == 0, at.y, NA)\naxis(2, at=at.y, labels=lab.y, las=2)\naxis(1,time)\nlines(time,Y2,lty=2)\nlines(time,Y7,lty=3)\nlines(time,Y3,col=\"red\",lty=2)\nabline(h=swisspop,col=\"red\",lty=3)\npoints(tag,cases,type=\"l\",col=\"red\")\n\n\nlog Inzidenz\n\n\n\n\n\nErste Welle. Example of doubling times: 1 day (solid), 2 days (dashed), 3 days (red), seven days (dotted), with reported cases Covid19 in Switzerland. Horizontal line: swiss population. On a logarithmic scale, a straight line indicates exponential growth. Quelle."
  },
  {
    "objectID": "posts/exponentialGrowth/index.html#auswirkung-vorfaktor",
    "href": "posts/exponentialGrowth/index.html#auswirkung-vorfaktor",
    "title": "Exponential Growth",
    "section": "Auswirkung Vorfaktor",
    "text": "Auswirkung Vorfaktor\nAnnahme: Verdoppelung alle drei Tage, 10 Prozent der Infizierten müssen ins Spital. Die Anzahl Cases von heute sind die Anzahl Spitalpatienten in 9 Tagen, wenn mann nichts macht.\n\\(0.1\\times 2^{0.33t}=0.1\\times (2^{0.33})^t=0.1\\times 1.3^t=1.3^{\\log_{1.3}0.1}1.3^t=1.3^{t+\\log_{1.3}0.1}=1.3^{t-8.776}\\)\nAnalog kann man zeigen: Wenn die Mortalitätsrate bei einem Prozent der bestätigten Fälle liegt, dann ist die Anzahl der bestätigten Fälle die zu erwartende Anzahl der Todesfälle ca. 18 Tage später, wenn man nichts macht.\n\\(0.01\\times 2^{0.33t}=0.01\\times (2^{0.33})^t=0.01\\times 1.3^t=1.3^{\\log_{1.3}0.01}1.3^t=1.3^{t+\\log_{1.3}0.01}=1.3^{t-17.553}\\)\n\nCodedelay<-log(0.1)/log(1.3)\ndelay\n\n[1] -8.776291\n\nCodedelay2<-log(0.01)/log(1.3)\ndelay2\n\n[1] -17.55258\n\nCodeplot(time,2^(0.33*time),ylab=\"cases\",xlab=\"days\",type=\"l\",ylim=c(0,10000),col=3)\nlines(time,0.1*2^(time/3),lty=1,col=1)\nlines(time,0.01*2^(time/3),lty=1,col=2,lwd=2)\n\n\nAuswirkung Vorfaktor"
  },
  {
    "objectID": "archive.html",
    "href": "archive.html",
    "title": "Archive",
    "section": "",
    "text": "Oct 24, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOct 6, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSep 29, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSep 26, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "👀 I’m interested in philosophy, physics, quantitative research methodology and biostatistics.\n🌱 I’m currently working as a statistics consultant at the Institute of Physiotherapy, Zurich University of Applied Sciences.\n❤️ I like 🏃.\n\n🏢 André Meichtry, Dozent Institut für Physiotherapie\nZürcher Hochschule für Angewandte Wissenschaften ZHAW\nTechnikumstr. 71, 8401 Winterthur\nTel: 058 934 64 86"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html",
    "href": "posts/fromLMtoSplines/index.html",
    "title": "Beyond linearity",
    "section": "",
    "text": "Triceps skinfold thickness dataset: The data are derived from an anthropometric study of 892 females under 50 years in three Gambian villages in West Africa.\n\nCodelibrary(MultiKink)\nlibrary(ggplot2)\nlibrary(psych)\n\n\nAttaching package: 'psych'\n\n\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n\n\n\nCodedata(\"triceps\")\nheadTail(triceps)\n\n      age lntriceps triceps\n1   12.05      1.22     3.4\n2    9.91      1.39       4\n3   10.04      1.44     4.2\n4   11.49      1.44     4.2\n...   ...       ...     ...\n889  7.91      1.92     6.8\n890  7.99      1.44     4.2\n891 14.63       2.2       9\n892 30.14       2.1     8.2\n\nCodetri.age.plot <- ggplot(triceps, aes(x=age, y=triceps)) +\n                 geom_point(alpha=0.55, color=\"black\") + \n                 theme_minimal() \ntri.age.plot"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#rmse-for-quadratic",
    "href": "posts/fromLMtoSplines/index.html#rmse-for-quadratic",
    "title": "Beyond linearity",
    "section": "RMSE for quadratic",
    "text": "RMSE for quadratic\n\nCodelibrary(caret)\n\nLoading required package: lattice\n\nCodeset.seed(1234)\ntrC.lm <- trainControl(method = \"repeatedcv\", \n                       number = 10,         \n                       repeats = 10)        \npol.model <- train(triceps ~ poly(age,3),\n                       data = triceps, \n                       method = \"lm\",\n                       trControl = trC.lm)    \npol.model$results[2]\n\n      RMSE\n1 3.865866"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#rmse-for-different-degrees",
    "href": "posts/fromLMtoSplines/index.html#rmse-for-different-degrees",
    "title": "Beyond linearity",
    "section": "RMSE for different degrees",
    "text": "RMSE for different degrees\n\nCodemy.pol.f <- function(x){\n    xx<-poly(triceps$age, x, raw=T)    \n    new.data  <- cbind(triceps=triceps$triceps, xx)                                 \n    pol.model <- train(triceps~., data = new.data,method = \"lm\")    \n    RMSE.cv = pol.model$results[2]\n  }\n\nt(sapply(1:10, my.pol.f))\n\n     RMSE     RMSE     RMSE     RMSE    RMSE     RMSE     RMSE     RMSE     RMSE     RMSE    \n[1,] 3.984711 4.083302 3.830449 3.77627 3.787051 3.740982 3.847184 3.803367 3.866925 3.803712\n\n\n\nCodetri.age.plot + \n   stat_smooth(method = \"lm\", \n               formula = y~poly(x,6,raw=T), size = 1)"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#natural-cubic-splines-restriction-that-the-fitted-curve-linear-at-the-extremes",
    "href": "posts/fromLMtoSplines/index.html#natural-cubic-splines-restriction-that-the-fitted-curve-linear-at-the-extremes",
    "title": "Splines are beautiful",
    "section": "Natural cubic splines, restriction that the fitted curve linear at the extremes",
    "text": "Natural cubic splines, restriction that the fitted curve linear at the extremes\n\ncub.splines.ns <- lm(triceps ~ ns(age, knots = c(5,10,20,30,40)), \n                   data=triceps)\nsummary(cub.splines.ns)\n\n\nCall:\nlm(formula = triceps ~ ns(age, knots = c(5, 10, 20, 30, 40)), \n    data = triceps)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10.4875  -1.6873  -0.3665   1.1146  22.8643 \n\nCoefficients:\n                                       Estimate Std. Error t value Pr(>|t|)\n(Intercept)                              8.3811     0.5219  16.059  < 2e-16\nns(age, knots = c(5, 10, 20, 30, 40))1  -3.5592     0.6712  -5.303 1.44e-07\nns(age, knots = c(5, 10, 20, 30, 40))2   5.7803     1.0379   5.569 3.39e-08\nns(age, knots = c(5, 10, 20, 30, 40))3   5.5118     0.9416   5.853 6.78e-09\nns(age, knots = c(5, 10, 20, 30, 40))4   6.9070     0.9050   7.632 5.99e-14\nns(age, knots = c(5, 10, 20, 30, 40))5   5.4136     1.3783   3.928 9.24e-05\nns(age, knots = c(5, 10, 20, 30, 40))6   6.6460     1.0829   6.137 1.27e-09\n\nResidual standard error: 3.759 on 885 degrees of freedom\nMultiple R-squared:  0.4199,    Adjusted R-squared:  0.416 \nF-statistic: 106.8 on 6 and 885 DF,  p-value: < 2.2e-16\n\n\n\ntri.age.plot <- ggplot(triceps, aes(x=age, y=triceps)) +\n                 geom_point(alpha=0.55, color=\"black\") + \n                 theme_minimal() \ntri.age.plot +\n    stat_smooth(method = \"lm\", \n               formula = y~bs(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"green\") + \n    stat_smooth(method = \"lm\", \n               formula = y~ns(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"red\")\n\n\npolynomial cubic splines, natural cubic splines"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#connecting-the-lines",
    "href": "posts/fromLMtoSplines/index.html#connecting-the-lines",
    "title": "Splines are beautiful",
    "section": "Connecting the lines",
    "text": "Connecting the lines\nWe want continuity in the knots, this will be the model:\n\\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2I_{x_i\\geq 5}(x_i-5)+\\cdots+\\beta_6I_{x_i \\geq 40}(x_i-40) + \\epsilon_i\\]\nBy “hand” or with B-splines: splines::bs()\n\nCodepred7 <- predict(lm(triceps~ age + I((age-5)*(age>=5)) +\n                                   I((age-10)*(age >= 10)) +\n                                   I((age-20)*(age >= 20)) +\n                                   I((age-30)*(age >= 30)) +\n                                  I((age-40)*(age >= 40)),\n                    data = triceps))\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred7, x=age), size = 1, col=\"red\")\n\n\n\n\n\nCodelibrary(splines)\npred.lm.bs <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=1), data=triceps))\n\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.lm.bs, x=age), size = 1, col=\"red\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#piecewise-quadratic",
    "href": "posts/fromLMtoSplines/index.html#piecewise-quadratic",
    "title": "Splines are beautiful",
    "section": "Piecewise quadratic",
    "text": "Piecewise quadratic\n\npred.quad <- predict(lm(triceps~ age + I(age^2) + \n                    I((age-5)*(age>=5)) + I((age-5)^2*(age>=5)) +\n                    I((age-10)*(age >= 10)) + I((age-10)^2*(age>=10)) +\n                    I((age-20)*(age >= 20)) + I((age-20)^2*(age>=20)) +\n                    I((age-30)*(age >= 30)) + I((age-30)^2*(age>=30)) +\n                    I((age-40)*(age >= 40)) + I((age-40)^2*(age>=40)),\n                    data = triceps))\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.quad, x=age), size = 1, col=\"red\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#einfacher-mit-bs",
    "href": "posts/fromLMtoSplines/index.html#einfacher-mit-bs",
    "title": "Splines are beautiful",
    "section": "einfacher mit bs()!",
    "text": "einfacher mit bs()!\n\nlibrary(splines)\npred.lm.bs <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=1), data=triceps))\n\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.lm.bs, x=age), size = 1, col=\"red\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#not-smooth-yet-only-quadratic-terms",
    "href": "posts/fromLMtoSplines/index.html#not-smooth-yet-only-quadratic-terms",
    "title": "Splines are beautiful",
    "section": "Not smooth yet, only quadratic terms",
    "text": "Not smooth yet, only quadratic terms\n\npred.quadsmooth <- predict(lm(triceps~ age + I(age^2) + \n                    I((age-5)^2*(age>=5)) +\n                    I((age-10)^2*(age>=10)) +\n                    I((age-20)^2*(age>=20)) +\n                    I((age-30)^2*(age>=30)) +\n                    I((age-40)^2*(age>=40)),\n                    data = triceps))\n#einfacher mit `bs()`!\nlibrary(splines)\npred.quadsmooth2 <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=2), data=triceps))                        \ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.quadsmooth2, x=age), size = 1, col=\"blue\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#b-splines",
    "href": "posts/fromLMtoSplines/index.html#b-splines",
    "title": "Splines are beautiful",
    "section": "B-splines",
    "text": "B-splines\n\\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2x^2+\\beta_3x^3+\\beta_4I_{x_i\\geq 5}(x_i-5)^3+\\cdots+\\beta_9I_{x_i \\geq 40}(x_i-40)^3 + \\epsilon_i\\]\n\nCodecub.splines.bs <- lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree = 3), data=triceps)\nsummary(cub.splines.bs)\n\n\nCall:\nlm(formula = triceps ~ bs(age, knots = c(5, 10, 20, 30, 40), \n    degree = 3), data = triceps)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-11.5234  -1.6912  -0.2917   1.1356  23.0922 \n\nCoefficients:\n                                                   Estimate Std. Error t value Pr(>|t|)\n(Intercept)                                          6.9598     0.9729   7.154 1.77e-12\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)1   2.5367     1.7154   1.479   0.1396\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)2  -0.3032     0.9629  -0.315   0.7529\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)3  -1.9092     1.2993  -1.469   0.1421\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)4   7.4056     1.2179   6.081 1.78e-09\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)5   6.1050     1.4043   4.347 1.54e-05\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)6  10.1770     1.5427   6.597 7.23e-11\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)7   3.9428     1.9082   2.066   0.0391\nbs(age, knots = c(5, 10, 20, 30, 40), degree = 3)8  10.1473     1.7545   5.784 1.01e-08\n\nResidual standard error: 3.743 on 883 degrees of freedom\nMultiple R-squared:  0.4261,    Adjusted R-squared:  0.4209 \nF-statistic: 81.94 on 8 and 883 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#natural-splines-restriction-that-the-fitted-curve-linear-at-the-extremes",
    "href": "posts/fromLMtoSplines/index.html#natural-splines-restriction-that-the-fitted-curve-linear-at-the-extremes",
    "title": "Beyond linearity",
    "section": "Natural splines, restriction that the fitted curve linear at the extremes",
    "text": "Natural splines, restriction that the fitted curve linear at the extremes\n\nCodecub.splines.ns <- lm(triceps ~ ns(age, knots = c(5,10,20,30,40)), data=triceps)\n\n\n\nCodetri.age.plot <- ggplot(triceps, aes(x=age, y=triceps)) +\n                 geom_point(alpha=0.55, color=\"black\") + \n                 theme_minimal() \ntri.age.plot +\n    stat_smooth(method = \"lm\", \n               formula = y~bs(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"green\") + \n    stat_smooth(method = \"lm\", \n               formula = y~ns(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"red\")\n\n\npolynomial cubic splines, natural cubic splines"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#with-b-splines-splinesbs",
    "href": "posts/fromLMtoSplines/index.html#with-b-splines-splinesbs",
    "title": "Splines are beautiful",
    "section": "With B-splines: splines::bs()\n",
    "text": "With B-splines: splines::bs()\n\n\nlibrary(splines)\npred.lm.bs <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=1), data=triceps))\n\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.lm.bs, x=age), size = 1, col=\"red\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#piecewise-quadratic-polynomial",
    "href": "posts/fromLMtoSplines/index.html#piecewise-quadratic-polynomial",
    "title": "Beyond linearity",
    "section": "Piecewise quadratic polynomial",
    "text": "Piecewise quadratic polynomial"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#continuous-piecewise",
    "href": "posts/fromLMtoSplines/index.html#continuous-piecewise",
    "title": "Beyond linearity",
    "section": "Continuous piecewise",
    "text": "Continuous piecewise\nLet us define a truncated power basis function per knot \\(\\xi\\),\n\\[h(x, \\xi)=(x-\\xi)_{+}=\n\\begin{cases}\n  x-\\xi, \\text{\\,if\\,} x>\\xi\\\\\n  0, \\text{\\,else}.\n\\end{cases}\n\\]\nThe continuous piecewise regression equation is\n\\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2 h(x_i,5)+\\cdots+\\beta_6 h(x_i,40) + \\epsilon_i\\]\nThis can be done -by hand- or with B-splines: splines::bs()\n\nCodepred7 <- predict(lm(triceps~ age + I((age-5)*(age>=5)) +\n                                   I((age-10)*(age >= 10)) +\n                                   I((age-20)*(age >= 20)) +\n                                   I((age-30)*(age >= 30)) +\n                                  I((age-40)*(age >= 40)),\n                    data = triceps))\nlibrary(splines)\npred.lm.bs <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=1), data=triceps))\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.lm.bs, x=age), size = 1, col=\"blue\")+\n  geom_line(data=triceps, \n            aes(y = pred7+.2, x=age), size = 1, col=\"red\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#cubic-b-splines",
    "href": "posts/fromLMtoSplines/index.html#cubic-b-splines",
    "title": "Beyond linearity",
    "section": "Cubic B-splines",
    "text": "Cubic B-splines\nMost often, cubic splines are used. Adding the following truncated power basis function per knot\n\\[h(x, \\xi_i)=(x-\\xi_i)_{+}^3=\n\\begin{cases}\n  (x-\\xi_i)^3, \\text{\\,if\\,} x>\\xi\\\\\n  0, \\text{\\,else}\n\\end{cases}\n\\]\nto the model for a cubic polynomial will lead to a discontinuity in only the third derivative at \\(\\xi\\); the function will remain continuous, with continuous first and second derivatives, at each of the knots:\n\\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2x^2+\\beta_3x^3+\\beta_4h(x_i,5)+\\cdots+\\beta_8h(x_i,40)^3 + \\epsilon_i\\]\nA cubic spline has \\(K+4\\) parameters.\n\nCodecub.splines.bs <- lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree = 3), data=triceps)"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#quadratic-spline",
    "href": "posts/fromLMtoSplines/index.html#quadratic-spline",
    "title": "Beyond linearity",
    "section": "Quadratic spline",
    "text": "Quadratic spline\nWith\n\\[h(x, \\xi)=(x-\\xi)_{+}^2=\n\\begin{cases}\n  (x-\\xi)^2, \\text{\\,if\\,} x>\\xi\\\\\n  0, \\text{\\,else},\n\\end{cases}\n\\]\nwe have as regression equation \\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2x_i^2+\\beta_3 h(x_i,5)+\\cdots+\\beta_7 h(x_i,40) + \\epsilon_i\\]\n\nCodepred.quadsmooth <- predict(lm(triceps~ age + I(age^2) + \n                    I((age-5)^2*(age>=5)) +\n                    I((age-10)^2*(age>=10)) +\n                    I((age-20)^2*(age>=20)) +\n                    I((age-30)^2*(age>=30)) +\n                    I((age-40)^2*(age>=40)),\n                    data = triceps))\npred.quadsmooth2 <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=2), data=triceps))                        \ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.quadsmooth, x=age), size = 1, col=\"blue\")+\n  geom_line(data=triceps, \n            aes(y = pred.quadsmooth2+.2, x=age), size = 1, col=\"red\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#cubic-spline",
    "href": "posts/fromLMtoSplines/index.html#cubic-spline",
    "title": "Beyond linearity",
    "section": "Cubic Spline",
    "text": "Cubic Spline\nMost often, cubic splines are used. Adding the following truncated power basis function per knot,\n\\[h(x, \\xi)=(x-\\xi)_{+}^3=\n\\begin{cases}\n  (x-\\xi)^3, \\text{\\,if\\,} x>\\xi\\\\\n  0, \\text{\\,else},\n\\end{cases}\n\\]\nto the model for a cubic polynomial will lead to a discontinuity in only the third derivative at \\(\\xi\\); the function will remain continuous, with continuous first and second derivatives, at each of the knots:\n\\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2x_i^2+\\beta_3x_i^3+\\beta_4h(x_i,5)+\\cdots+\\beta_8h(x_i,40) + \\epsilon_i\\]\nOne can show that a cubic spline has \\(K+4\\) parameters."
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#natural-splines",
    "href": "posts/fromLMtoSplines/index.html#natural-splines",
    "title": "Beyond linearity",
    "section": "Natural splines",
    "text": "Natural splines\nNatural splines have an additional restriction that the fitted curve linear at the extremes\n\nCodetri.age.plot <- ggplot(triceps, aes(x=age, y=triceps)) +\n                 geom_point(alpha=0.55, color=\"black\") + \n                 theme_minimal() \ntri.age.plot +\n    stat_smooth(method = \"lm\", \n               formula = y~bs(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"green\") + \n    stat_smooth(method = \"lm\", \n               formula = y~ns(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"red\")\n\n\npolynomial cubic splines (green), natural cubic splines (red)"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#continuous-piecewise-linear-regression",
    "href": "posts/fromLMtoSplines/index.html#continuous-piecewise-linear-regression",
    "title": "Beyond linearity",
    "section": "Continuous piecewise linear regression",
    "text": "Continuous piecewise linear regression\nWe want a continuous function. Let us define a truncated power basis function (here of degree=1) per knot \\(\\xi\\),\n\\[h(x, \\xi)=(x-\\xi)^1_{+}=\n\\begin{cases}\n  x-\\xi, \\text{\\,if\\,} x>\\xi\\\\\n  0, \\text{\\,else}.\n\\end{cases}\n\\]\nThe continuous piecewise regression equation is\n\\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2 h(x_i,5)+\\cdots+\\beta_6 h(x_i,40) + \\epsilon_i\\]\nThis can be done -by hand- or with B-splines splines::bs()\n\nCodepred7 <- predict(lm(triceps~ age + I((age-5)*(age>=5)) +\n                                   I((age-10)*(age >= 10)) +\n                                   I((age-20)*(age >= 20)) +\n                                   I((age-30)*(age >= 30)) +\n                                  I((age-40)*(age >= 40)),\n                    data = triceps))\nlibrary(splines)\npred.lm.bs <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=1), data=triceps))\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.lm.bs, x=age), size = 1, col=\"blue\")+\n  geom_line(data=triceps, \n            aes(y = pred7+.2, x=age), size = 1, col=\"red\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#natural-spline",
    "href": "posts/fromLMtoSplines/index.html#natural-spline",
    "title": "Beyond linearity",
    "section": "Natural Spline",
    "text": "Natural Spline\nNatural splines have an additional restriction that the fitted curve linear at the extremes, splines::ns()\n\nCodecub.splines.bs <- lm(triceps ~ bs(age, knots = c(5,10,20,30,40)), data=triceps)\ncub.splines.ns <- lm(triceps ~ ns(age, knots = c(5,10,20,30,40)), data=triceps)\n\n\n\nCodetri.age.plot <- ggplot(triceps, aes(x=age, y=triceps)) +\n                 geom_point(alpha=0.55, color=\"black\") + \n                 theme_minimal() \ntri.age.plot +\n    stat_smooth(method = \"lm\", \n               formula = y~bs(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"green\") + \n    stat_smooth(method = \"lm\", \n               formula = y~ns(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"red\")\n\n\npolynomial cubic splines (green), natural cubic splines (red)"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#lambda-determined-with-cross-validation",
    "href": "posts/fromLMtoSplines/index.html#lambda-determined-with-cross-validation",
    "title": "Beyond linearity",
    "section": "\n\\(\\lambda\\) determined with cross-validation",
    "text": "\\(\\lambda\\) determined with cross-validation\n\nCodesspline <- smooth.spline(x=triceps$age, y=triceps$triceps, cv=TRUE)\n\nWarning in smooth.spline(x = triceps$age, y = triceps$triceps, cv = TRUE): cross-validation with non-unique 'x' values\nseems doubtful\n\nCodeplot(triceps$age, triceps$triceps)\nlines(sspline, lwd=3,col=\"red\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#no-smooth-and-max-smooth",
    "href": "posts/fromLMtoSplines/index.html#no-smooth-and-max-smooth",
    "title": "Beyond linearity",
    "section": "No smooth and max smooth",
    "text": "No smooth and max smooth\n\nCodessplineNosmooth <- smooth.spline(x=triceps$age, y=triceps$triceps, lambda=0)\nssplineMaxsmooth <- smooth.spline(x=triceps$age, y=triceps$triceps, lambda=100)\nplot(triceps$age, triceps$triceps)\nlines(ssplineNosmooth, lwd=2,col=\"red\")\nlines(ssplineMaxsmooth, lwd=2,col=\"blue\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#the-extremes-no-smooth-and-max-smooth",
    "href": "posts/fromLMtoSplines/index.html#the-extremes-no-smooth-and-max-smooth",
    "title": "Beyond linearity",
    "section": "The extremes: no smooth and max smooth",
    "text": "The extremes: no smooth and max smooth\n\nCodessplineNosmooth <- smooth.spline(x=triceps$age, y=triceps$triceps, lambda=0)\nssplineMaxsmooth <- smooth.spline(x=triceps$age, y=triceps$triceps, lambda=100)\nplot(triceps$age, triceps$triceps)\nlines(ssplineNosmooth, lwd=2,col=\"red\")\nlines(ssplineMaxsmooth, lwd=2,col=\"blue\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#polynomial-regression",
    "href": "posts/fromLMtoSplines/index.html#polynomial-regression",
    "title": "Beyond linearity",
    "section": "Polynomial regression",
    "text": "Polynomial regression\nUsing poly() in lm():\n\nCodemodel.cubic.poly <- lm(triceps~poly(age,3,raw=TRUE),data=triceps)\n## the same model:\n## model.cubic <- lm(triceps~age + I(age^2) + I(age^3),\n##                   data=triceps)\ntri.age.plot + \n   stat_smooth(method = \"lm\", \n               formula = y~poly(x,3,raw=T), size = 1)"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#cross-validation-of-different-polynomials",
    "href": "posts/fromLMtoSplines/index.html#cross-validation-of-different-polynomials",
    "title": "Beyond linearity",
    "section": "Cross-validation of different polynomials",
    "text": "Cross-validation of different polynomials\nRMSE for quadratic\n\nCodelibrary(caret)\n\nLoading required package: lattice\n\nCodeset.seed(1234)\ntrC.lm <- trainControl(method = \"repeatedcv\", \n                       number = 10,         \n                       repeats = 10)        \npol.model <- train(triceps ~ poly(age,3),\n                       data = triceps, \n                       method = \"lm\",\n                       trControl = trC.lm)    \npol.model$results[2]\n\n      RMSE\n1 3.865866\n\n\nRMSE for different degrees\n\nCodemy.pol.f <- function(x){\n    xx<-poly(triceps$age, x, raw=T)    \n    new.data  <- cbind(triceps=triceps$triceps, xx)                                 \n    pol.model <- train(triceps~., data = new.data,method = \"lm\")    \n    RMSE.cv = pol.model$results[2]\n  }\n\nt(sapply(1:10, my.pol.f))\n\n     RMSE     RMSE     RMSE     RMSE    RMSE     RMSE     RMSE     RMSE     RMSE     RMSE    \n[1,] 3.984711 4.083302 3.830449 3.77627 3.787051 3.740982 3.847184 3.803367 3.866925 3.803712\n\n\n\nCodetri.age.plot + \n   stat_smooth(method = \"lm\", \n               formula = y~poly(x,6,raw=T), size = 1)"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#piecewise-linear-regression",
    "href": "posts/fromLMtoSplines/index.html#piecewise-linear-regression",
    "title": "Beyond linearity",
    "section": "Piecewise linear regression",
    "text": "Piecewise linear regression\nInstead of fitting a high-degree polynomial over the entire range of \\(X\\), piecewise polynomial regression involves fitting separate low-degree polynomials over different regions of \\(X\\). For example, a piecewise cubic polynomial works by fitting a cubic regression model of the form\n\\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2x_i^2+\\beta_3x_i^3+\\epsilon_i,\\]\nwhere the coefficients differ in different parts of the range of \\(X\\). The points where the coefficients change are called knots \\(\\xi_k\\), \\(k=1,\\dots,K\\).\nLet us begin with a piecewise linear (degree=1):\n\nCodepred1 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age<5,]))\npred2 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age >=5 & triceps$age<10,]))\npred3 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age>=10 & triceps$age<20,]))\npred4 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age>=20 & triceps$age<30,]))\npred5 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age>=30 & triceps$age<40,]))\npred6 <- predict(lm(triceps~age, \n                    data = triceps[triceps$age>=40,]))\ntri.age.plot + \n  geom_line(data=triceps[triceps$age<5,], \n            aes(y = pred1, x=age), size = 1, col=\"blue\") +\n  geom_line(data=triceps[triceps$age >=5 & triceps$age<10,], \n            aes(y = pred2, x=age), size = 1, col=\"blue\") +\n  geom_line(data=triceps[triceps$age>=10 & triceps$age<20,], \n            aes(y = pred3, x=age), size = 1, col=\"blue\") +\n  geom_line(data=triceps[triceps$age>=20 & triceps$age<30,], \n            aes(y = pred4, x=age), size = 1, col=\"blue\") +\n  geom_line(data=triceps[triceps$age>=30 & triceps$age<40,], \n            aes(y = pred5, x=age), size = 1, col=\"blue\") +\n  geom_line(data=triceps[triceps$age>=40,], \n            aes(y = pred6, x=age), size = 1, col=\"blue\")\n\n\n\n\nContinuous piecewise linear regression\nWe want a continuous function. Let us define a truncated power basis function (here of degree=1) per knot \\(\\xi\\),\n\\[h(x, \\xi)=(x-\\xi)^1_{+}=\n\\begin{cases}\n  x-\\xi, \\text{\\,if\\,} x>\\xi\\\\\n  0, \\text{\\,else}.\n\\end{cases}\n\\]\nThe continuous piecewise regression equation is\n\\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2 h(x_i,5)+\\cdots+\\beta_6 h(x_i,40) + \\epsilon_i\\]\nThis can be done -by hand- or with B-splines splines::bs()\n\nCodepred7 <- predict(lm(triceps~ age + I((age-5)*(age>=5)) +\n                                   I((age-10)*(age >= 10)) +\n                                   I((age-20)*(age >= 20)) +\n                                   I((age-30)*(age >= 30)) +\n                                  I((age-40)*(age >= 40)),\n                    data = triceps))\nlibrary(splines)\npred.lm.bs <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=1), data=triceps))\ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.lm.bs, x=age), size = 1, col=\"blue\")+\n  geom_line(data=triceps, \n            aes(y = pred7+.2, x=age), size = 1, col=\"red\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#splines",
    "href": "posts/fromLMtoSplines/index.html#splines",
    "title": "Beyond linearity",
    "section": "Splines",
    "text": "Splines\nQuadratic spline\nWith\n\\[h(x, \\xi)=(x-\\xi)_{+}^2=\n\\begin{cases}\n  (x-\\xi)^2, \\text{\\,if\\,} x>\\xi\\\\\n  0, \\text{\\,else},\n\\end{cases}\n\\]\nwe have as regression equation \\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2x_i^2+\\beta_3 h(x_i,5)+\\cdots+\\beta_7 h(x_i,40) + \\epsilon_i\\]\n\nCodepred.quadsmooth <- predict(lm(triceps~ age + I(age^2) + \n                    I((age-5)^2*(age>=5)) +\n                    I((age-10)^2*(age>=10)) +\n                    I((age-20)^2*(age>=20)) +\n                    I((age-30)^2*(age>=30)) +\n                    I((age-40)^2*(age>=40)),\n                    data = triceps))\npred.quadsmooth2 <- predict(lm(triceps ~ bs(age, knots = c(5,10,20,30,40),degree=2), data=triceps))                        \ntri.age.plot +\n  geom_line(data=triceps, \n            aes(y = pred.quadsmooth, x=age), size = 1, col=\"blue\")+\n  geom_line(data=triceps, \n            aes(y = pred.quadsmooth2+.2, x=age), size = 1, col=\"red\")\n\n\n\n\nCubic Spline\nMost often, cubic splines are used. Adding the following truncated power basis function per knot,\n\\[h(x, \\xi)=(x-\\xi)_{+}^3=\n\\begin{cases}\n  (x-\\xi)^3, \\text{\\,if\\,} x>\\xi\\\\\n  0, \\text{\\,else},\n\\end{cases}\n\\]\nto the model for a cubic polynomial will lead to a discontinuity in only the third derivative at \\(\\xi\\); the function will remain continuous, with continuous first and second derivatives, at each of the knots:\n\\[Y_i=\\beta_0+\\beta_1x_i+\\beta_2x_i^2+\\beta_3x_i^3+\\beta_4h(x_i,5)+\\cdots+\\beta_8h(x_i,40) + \\epsilon_i\\]\nOne can show that a cubic spline has \\(K+4\\) parameters.\nNatural Spline\nNatural splines have an additional restriction that the fitted curve linear at the extremes, splines::ns()\n\nCodecub.splines.bs <- lm(triceps ~ bs(age, knots = c(5,10,20,30,40)), data=triceps)\ncub.splines.ns <- lm(triceps ~ ns(age, knots = c(5,10,20,30,40)), data=triceps)\n\n\n\nCodetri.age.plot <- ggplot(triceps, aes(x=age, y=triceps)) +\n                 geom_point(alpha=0.55, color=\"black\") + \n                 theme_minimal() \ntri.age.plot +\n    stat_smooth(method = \"lm\", \n               formula = y~bs(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"green\") + \n    stat_smooth(method = \"lm\", \n               formula = y~ns(x,knots = c(5,10,20,30,40)), \n               lty = 1, col = \"red\")\n\n\npolynomial cubic splines (green), natural cubic splines (red)"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#smoothing-splines",
    "href": "posts/fromLMtoSplines/index.html#smoothing-splines",
    "title": "Beyond linearity",
    "section": "Smoothing splines",
    "text": "Smoothing splines\nAvoids the knot selection problem completely by using a maximal set of knots. The complexity of the fit is controlled by regularization. Problem: among all functions \\(f(x)\\) with two continuous derivatives, find one that minimizes the penalized residual sum of squares\n\\[\n  RSS(f,\\lambda)=\\sum_{i=1}^N(y_i-f(x_i))^2+\\lambda[f''(t)]^2dt\n\\tag{1}\\]\nwhere \\(\\lambda\\) is a fixed smoothing parameter. The first term measures closeness to the data, while the second term penalizes curvature in the function, and \\(\\lambda\\) establishes a tradeoff between the two. Special cases: \\(\\lambda=0\\) (no constraint on \\(f\\)) and \\(\\lambda=\\infty\\) (\\(f\\) has to be linear).\nThe function \\(f(x)\\) that minimizes (Equation 1) can be shown to have some special properties: it is a piecewise cubic polynomial with knots at the unique values of \\(x_1,\\dots,x_n\\) and continuous first and second derivatives at each knot. Furthermore, it is linear in the region outside of the extreme knots. In other words, the function \\(f(x)\\) that minimizes (Equation 1) is a natural cubic spline with knots at \\(x_1,\\dots,x_n\\) ! However, it is not the same natural cubic spline that one would get if one applied the basis function approach described above – rather, it is a shrunken version of such a natural cubic spline, where the value of the tuning parameter \\(\\lambda\\) in (Equation 1) controls the level of shrinkage.\nSmoothing splines are implemented in smooth.spline().\n\n\\(\\lambda\\) determined with cross-validation\n\nCodesspline <- smooth.spline(x=triceps$age, y=triceps$triceps, cv=TRUE)\n\nWarning in smooth.spline(x = triceps$age, y = triceps$triceps, cv = TRUE): cross-validation with non-unique 'x' values\nseems doubtful\n\nCodeplot(triceps$age, triceps$triceps)\nlines(sspline, lwd=3,col=\"red\")\n\n\n\n\nThe extremes: no smooth and max smooth\n\nCodessplineNosmooth <- smooth.spline(x=triceps$age, y=triceps$triceps, lambda=0)\nssplineMaxsmooth <- smooth.spline(x=triceps$age, y=triceps$triceps, lambda=100)\nplot(triceps$age, triceps$triceps)\nlines(ssplineNosmooth, lwd=2,col=\"red\")\nlines(ssplineMaxsmooth, lwd=2,col=\"blue\")"
  },
  {
    "objectID": "posts/fromLMtoSplines/index.html#generalized-additive-model",
    "href": "posts/fromLMtoSplines/index.html#generalized-additive-model",
    "title": "Beyond linearity",
    "section": "Generalized additive model",
    "text": "Generalized additive model\nUsing mgcv::gam()\n\nCodelibrary(mgcv)\n\nLoading required package: nlme\n\n\nThis is mgcv 1.8-35. For overview type 'help(\"mgcv-package\")'.\n\nCodegamtri<-gam(triceps~s(age,bs=\"cr\"),data=triceps)\nsummary(gamtri)\n\n\nFamily: gaussian \nLink function: identity \n\nFormula:\ntriceps ~ s(age, bs = \"cr\")\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)\n(Intercept)   9.7024     0.1255   77.29   <2e-16\n\nApproximate significance of smooth terms:\n         edf Ref.df    F p-value\ns(age) 6.706  7.539 85.6  <2e-16\n\nR-sq.(adj) =  0.419   Deviance explained = 42.3%\nGCV =  14.18  Scale est. = 14.057    n = 892\n\nCodeplot(gamtri)"
  },
  {
    "objectID": "posts/gendern/index.html",
    "href": "posts/gendern/index.html",
    "title": "Gendern",
    "section": "",
    "text": "Von Menschen und Mensch*innen. 20 gute Gründe, mit dem Gendern aufzuhören\n\nVielleicht endet die Geschichte des geschlechtergerechten Sprachumbaus mit all seinen grotesken Auswüchsen eines Tages wie Andersens Märchen vom Kaiser und seinen neuen Kleidern. Dort ist es bekanntlich ein Kind, das am Ende ausruft: „Aber der Kaiser hat ja gar nichts an!“ und dem Spuk damit ein Ende macht. Zuvor wollte in dem Märchen niemand eingestehen, dass er überhaupt keine Kleider sieht, weil er Angst hatte, in diesem Fall für dumm zu gelten.\nBeim Gendern ist es unsere Angst, von den anderen für „frauenfeindlich“ gehalten zu werden oder nicht auf der Höhe der Zeit zu sein, die viele mitlaufen lässt. Dabei ist die geschlechtergerechte Sprache noch nicht einmal ein „neues Kleid“, sondern ein über 40 Jahre altes Konzept, bei dem die Frage erlaubt sein muss, was es heute noch für ein gleichberechtigtes Miteinander der Geschlechter zu leisten vermag."
  }
]